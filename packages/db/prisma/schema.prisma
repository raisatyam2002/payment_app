// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}
model User {
  id          Int      @id @default(autoincrement())
  phone       String      @unique
  name        String?
  password    String
  OnRampTransaction OnRampTransaction[]
  Balance           Balance[]
  sender            P2P[] @relation("sender")
  receiver          P2P[] @relation("receiver")
  BalanceHistory    BalanceHistory[]
} 
model OnRampTransaction {
  id        Int          @id @default(autoincrement())
  status    OnRampStatus
  token     String       @unique
  provider  String
  amount    Int
  startTime DateTime
  userId    Int
  user      User         @relation(fields: [userId], references: [id])
}

model Balance {
  id     Int  @id @default(autoincrement())
  userId Int  @unique
  amount Int
  locked Int
  user   User @relation(fields: [userId], references: [id])
}
model P2P{
 id Int @id @default(autoincrement())
 amount Int
 senderId Int 
 receiverId Int 
 startTime DateTime
 sender User @relation("sender",fields: [senderId],references: [id])
 receiver User @relation("receiver",fields: [receiverId],references: [id])
}
model BalanceHistory{
 id Int @id @default(autoincrement())
 amount Int
 Date DateTime
 userId Int 
 user User @relation(fields: [userId],references: [id])

}
enum OnRampStatus {
  Success
  Failure
  Processing
}